
实验一：
	##############	time：2017.10.13   #################
	########### 功能：构建分类预测的demo ##########
	########### 不足：对相同用户进行合并 ########

	功能： 分别构建训练集和测试的词典，然后合并
		   对每一条数据进行one-hot编码
		   
		未完成：对原始数据按照相同的device_id进行合并
		
	实验记录：

		1、Time1:train_data=20000,test_data=10000
			各个指标值：TP,TN,FP,FN： 5029 1896 1762 1313
				准确率： 0.6925
				male_recall： 0.792967518133
				female_recall： 0.518316019683
				精准率： 0.740538948608
				F1值： 0.765857001447
			
		2、Time1:train_data=100000,test_data=10000
		    各个指标值：TP,TN,FP,FN： 5490 2653 1064 793
				准确率： 0.8143
				male_recall： 0.873786407767
				female_recall： 0.713747645951
				精准率： 0.837656393042
				F1值： 0.855340032718
			
		3、Time1:train_data=200000,test_data=10000
		  各个指标值：TP,TN,FP,FN： 5762 2916 743 579
				准确率： 0.8678
				male_recall： 0.908689481154
				female_recall： 0.796939054386
				精准率： 0.885780169101
				F1值： 0.897088587887
			
		4、Time1:train_data=350000,test_data=30000
		   各个指标值：TP,TN,FP,FN： 17654 9447 1693 1206
				准确率： 0.903366666667
				male_recall： 0.93605514316
				female_recall： 0.84802513465
				精准率： 0.912492892955
				F1值： 0.92412385165
		

实验二、	
		###############  time:2017.10.15  ##############
		################ 承实验一，直接对数据进行降维处理 #################

		改进：使用pca降维，训练模型时，固定输入数据的特征维度（先用'mle'找到最好的长度）
		
		1、实验条件
			n_components=2000
			df_train = df[:50000]  # 训练集
			df_test = df[70000:100000]  #测试集
			
		  实验结果：
			各个指标值：TP,TN,FP,FN： 12809 3886 6931 6374
			准确率： 0.5565
			male_recall： 0.667726632956
			female_recall： 0.359249329759
			精准率： 0.648885511651
			F1值： 0.658171261208

			
		2、实验条件
			n_components=5000
			df_train = df[:150000]  # 训练集
			df_test = df[370000:380000]  #测试集	
			
		  实验结果：
			各个指标值：TP,TN,FP,FN： 4174 1333 2267 2226
			准确率： 0.5507
			male_recall： 0.6521875
			female_recall： 0.370277777778
			精准率： 0.648036019252
			F1值： 0.650105131999
			
    问题与不足：
	       1、通过实验，发现效果并不好
		   2、训练时，每个特征词典长度是一定了（训练集+测试集），但是如果来了新的数据，
		      导致词典长度改变，导致特征维度改变，那么训练好的模型就没办法对新数据进行预测
					
总结：在没有解决预测集元素增加导致词典长度变化的问题前，暂时用实验一对性别进行预测
					
	
实验三：	
		##############	time：2017.10.16  #################
		########### 功能：构建分类预测的demo ##########
		########### 改进之处：对相同用户进行合并 ########
		效果不好
		1、实验条件
		   训练集：32000
		   测试集：18090
		   
		   实验结果
			  各个指标值：TP,TN,FP,FN： 9275 1825 4840 2150
			  准确率： 0.6135986733
			  male_recall： 0.81181619256
			  female_recall： 0.273818454614
			  精准率： 0.657102373362
			  F1值： 0.726311667972
		
		2、实验条件
		   训练集：45000
		   测试集：8090
		   
		   实验结果：
		   各个指标值：TP,TN,FP,FN： 3776 1126 1792 1396
				准确率： 0.605933250927
				male_recall： 0.730085073473
				female_recall： 0.385880740233
				精准率： 0.67816091954
				F1值： 0.703165735568
		
		结论与不足：通过对相同device_id的合并，进行预测，发现效果并不是很好。
		
		改进性思路：对特征进行降维数理试试？
						
实验四：			
		##############	time：2017.10.16  #################
		########### 功能：构建分类预测的demo ##########
		########### 改进之处：承接实验三、对用户数据进行降维处理 ########
	
	    train：45000
		test：8090
		
    4.1 使用pca进行降维处理
        1、各个指标值：TP,TN,FP,FN： 3968 721 2197 1204
			准确率： 0.579604449938
			male_recall： 0.76720804331
			female_recall： 0.247087045922
			精准率： 0.643633414436
			F1值： 0.700008820676
			

	4.2 用LDA进行降维处理
	      此路不通
          预测集没有标签


实验五：
      ################# 实验5.1 ##################
      ############ time:2017.10.18 ####################
      ########### 功能：构建分类预测的demo ##############
      ########## 改进：承接实验四：通过删除部分特征，查看预测效果 ##################
	    train：45000   <用的是合并之后的用户数据>
		test：8090
	    各个指标值：TP,TN,FP,FN： 3965 1014 1904 1207
		准确率： 0.615451174289
		male_recall： 0.766627996906
		female_recall： 0.347498286498
		精准率： 0.675583574715
		F1值： 0.718232044199
	  
	  
	  
 	  
